# On Ubuntu 20.04, follow the guidelines here for installing wxpython: https://tutorialforlinux.com/2020/03/15/step-by-step-wxpython-python-3-ubuntu-20-04-installation/
# Basically just apt install python3-pip make gcc libgtk-3-dev libgstreamer-gl1.0-0 freeglut3 freeglut3-dev python3-gst-1.0 libglib2.0-dev ubuntu-restricted-extras libgstreamer-plugins-base1.0-dev
# Then pip3 install --user wxpython  (it will take a while to build wx)
# And test by running the Python interpreter and trying to `import wx`

# In a virtual environment you wouldn't do `--user` when pip installing wx

# Then you need to actually download and install the prebuilt binary wxPython package for my system
#   - Get into your virtual environment
#   - Change the filename in the following URL to match your System, wxPython, and Python version
#   - pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk2/ubuntu-16.04/wxPython-4.0.0b2-cp36-cp36mu-linux_x86_64.whl wxPython

# On MacOS, I also had trouble getting it running.  I found out that when I create a virtual environment, I need to make
# sure that the base installation is a "framework" build.  This isn't hard to do with pyenv, just add an environment
# variable when installing the base version, then create a virtual environment off of it
# $ env PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 3.6.3
# $ pyenv virtualenv 3.6.3 eplaunch3env
# To debug, verify you have a framework build using the sysconfig package:
# from sysconfig import get_config_var
# if get_config_var("PYTHONFRAMEWORK"): # then you have a framework build (it returns the string 'Python' for me)

# Here are the *actual* PyPi dependencies that are listed in this file
coveralls==1.1
coverage==4.2
nose==1.3.7
pyinstaller==3.3.1
pypubsub==4.0.0
tox==2.9.1
